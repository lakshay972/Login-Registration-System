#include <iostream>
#include <fstream>
#include <string>
#include <unordered_map>
#include <sstream>
#include <functional>

using namespace std;

// Simple hash function for password hashing (not cryptographically secure)
string hashPassword(const string& password) {
    hash<string> hasher;
    return to_string(hasher(password));
}

// Load existing users into a map
unordered_map<string, string> loadUsers() {
    unordered_map<string, string> users;
    ifstream file("users.txt");
    string line;
    while (getline(file, line)) {
        stringstream ss(line);
        string username, hashedPassword;
        ss >> username >> hashedPassword;
        users[username] = hashedPassword;
    }
    file.close();
    return users;
}

// Registration function
void registerUser() {
    string username, password;
    cout << "Enter username: ";
    cin >> username;
    cout << "Enter password: ";
    cin >> password;

    unordered_map<string, string> users = loadUsers();

    if (users.find(username) != users.end()) {
        cout << "❌ Username already exists. Try a different one.\n";
        return;
    }

    string hashed = hashPassword(password);

    ofstream file("users.txt", ios::app);
    file << username << " " << hashed << endl;
    file.close();

    cout << "✅ Registration successful!\n";
}

// Login function
void loginUser() {
    string username, password;
    cout << "Enter username: ";
    cin >> username;
    cout << "Enter password: ";
    cin >> password;

    unordered_map<string, string> users = loadUsers();

    if (users.find(username) == users.end()) {
        cout << "❌ Username not found.\n";
        return;
    }

    string hashed = hashPassword(password);
    if (users[username] == hashed) {
        cout << "✅ Login successful. Welcome, " << username << "!\n";
    } else {
        cout << "❌ Incorrect password.\n";
    }
}

// Main menu
int main() {
    int choice;
    while (true) {
        cout << "\n---- Login System ----\n";
        cout << "1. Register\n";
        cout << "2. Login\n";
        cout << "3. Exit\n";
        cout << "Choose an option: ";
        cin >> choice;

        switch (choice) {
            case 1: registerUser(); break;
            case 2: loginUser(); break;
            case 3: cout << "👋 Exiting...\n"; return 0;
            default: cout << "❌ Invalid choice. Try again.\n";
        }
    }

    return 0;
}
